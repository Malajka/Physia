-- Create session_exercises table
CREATE TABLE IF NOT EXISTS "public"."session_exercises" (
  "id" BIGSERIAL PRIMARY KEY,
  "session_id" BIGINT NOT NULL REFERENCES "public"."sessions"("id") ON DELETE CASCADE,
  "exercise_id" BIGINT NOT NULL REFERENCES "public"."exercises"("id") ON DELETE CASCADE,
  "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL
);

-- Add indexes for performance
CREATE INDEX IF NOT EXISTS "idx_session_exercises_session_id" ON "public"."session_exercises"("session_id");
CREATE INDEX IF NOT EXISTS "idx_session_exercises_exercise_id" ON "public"."session_exercises"("exercise_id");

-- Enable Row Level Security
ALTER TABLE "public"."session_exercises" ENABLE ROW LEVEL SECURITY;

-- Create policies for security
-- Users can only view exercises for their own sessions
CREATE POLICY "Users can view own session exercises" 
ON "public"."session_exercises" 
FOR SELECT 
USING ((SELECT user_id FROM sessions WHERE id = session_id) = auth.uid());

-- Users can only insert exercises for their own sessions
CREATE POLICY "Users can insert into own sessions" 
ON "public"."session_exercises" 
FOR INSERT 
WITH CHECK ((SELECT user_id FROM sessions WHERE id = session_id) = auth.uid());

-- Comment on table
COMMENT ON TABLE "public"."session_exercises" IS 'Stores exercises generated by AI for specific sessions';
