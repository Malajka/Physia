name: Pull Request Workflow

on:
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22.14.0'

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    outputs:
      lint-success: ${{ steps.lint-step.outcome == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        id: lint-step
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    if: needs.lint.outputs.lint-success == 'true'
    outputs:
      unit-test-success: ${{ steps.unit-test-step.outcome == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests with coverage
        id: unit-test-step
        run: npm run test:coverage
        
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  e2e-tests:
    name: E2E Tests  
    runs-on: ubuntu-latest
    needs: lint
    if: needs.lint.outputs.lint-success == 'true'
    environment: integrations
    outputs:
      e2e-test-success: ${{ steps.e2e-test-step.outcome == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run E2E tests
        id: e2e-test-step
        run: npm run test:e2e
        env:
          # Secrets from GitHub environment 'integrations'
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_PUBLIC_KEY: ${{ secrets.SUPABASE_PUBLIC_KEY }}
          # Environment variables from GitHub environment 'integrations'  
          E2E_PASSWORD: ${{ vars.E2E_PASSWORD }}
          E2E_USERNAME: ${{ vars.E2E_USERNAME }}
          E2E_USERNAME_ID: ${{ vars.E2E_USERNAME_ID }}
          
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, e2e-tests]
    if: always() && needs.lint.outputs.lint-success == 'true'
    permissions:
      pull-requests: write
    
    steps:
      - name: Create status comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ## üîç Pull Request Status
            
            ### Test Results Summary
            
            | Job | Status |
            |-----|--------|
            | **Linting** | ${{ needs.lint.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |
            | **Unit Tests** | ${{ needs.unit-tests.result == 'success' && '‚úÖ Passed' || needs.unit-tests.result == 'failure' && '‚ùå Failed' || '‚è≠Ô∏è Skipped' }} |
            | **E2E Tests** | ${{ needs.e2e-tests.result == 'success' && '‚úÖ Passed' || needs.e2e-tests.result == 'failure' && '‚ùå Failed' || '‚è≠Ô∏è Skipped' }} |
            
            ### Overall Status
            ${{ (needs.lint.result == 'success' && needs.unit-tests.result == 'success' && needs.e2e-tests.result == 'success') && 'üéâ **All checks passed!** This PR is ready for review.' || '‚ö†Ô∏è **Some checks failed.** Please review the failed jobs above.' }}
            
            ---
            *Last updated: ${{ github.event.pull_request.head.sha }}*