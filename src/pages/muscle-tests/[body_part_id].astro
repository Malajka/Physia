---
export const prerender = false;

import PageHeader from "../../components/common/PageHeader.astro";
import MuscleTestForm from "../../components/muscle-test-selection/MuscleTestForm";
import EmptyState from "../../components/ui/EmptyState.astro";
import ErrorAlert from "../../components/ui/ErrorAlert.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import type { MuscleTestDto } from "../../types";

const { params } = Astro;
const origin = new URL(Astro.request.url).origin;
const bodyPartId = parseInt(params.body_part_id ?? "", 10);

let muscleTests: MuscleTestDto[] = [];
let fetchError: string | null = null;
let bodyPartName = "";

try {
  // Fetch muscle tests for this body part
  const res = await fetch(`${origin}/api/body_parts/${bodyPartId}/muscle_tests`);
  if (!res.ok) {
    const err = await res.json();
    throw new Error(err.error || "Failed to fetch muscle tests");
  }
  muscleTests = await res.json();

  // Also fetch the body part name if possible
  try {
    const bodyPartRes = await fetch(`${origin}/api/body_parts`);
    if (bodyPartRes.ok) {
      const bodyParts = await bodyPartRes.json();
      const bodyPart = bodyParts.find((bp: { id: number; name: string }) => bp.id === bodyPartId);
      if (bodyPart) {
        bodyPartName = bodyPart.name;
      }
    }
  } catch {
    // Silently fail - we'll use the ID if we can't get the name
  }
} catch (e) {
  fetchError = e instanceof Error ? e.message : String(e);
}

const pageTitle = bodyPartName ? `Muscle Tests for ${bodyPartName}` : `Muscle Tests for Body Part ${bodyPartId}`;
---

<MainLayout title={pageTitle}>
  <div class="container mx-auto py-8">
    <PageHeader
      title={pageTitle}
      subtitle="Please rate the pain intensity for each test on a scale from 0 (no pain) to 10 (severe pain that prevents work)."
    />

    {
      fetchError ? (
        <ErrorAlert message={fetchError} href="/body-parts" label="← Go back to body parts selection" />
      ) : muscleTests.length > 0 ? (
        <MuscleTestForm client:load bodyPartId={bodyPartId} muscleTests={muscleTests} />
      ) : (
        <EmptyState message="No muscle tests available for this body part." href="/body-parts" label="← Go back to body parts selection" />
      )
    }
  </div>
</MainLayout>
