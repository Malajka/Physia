---
import PageHeader from "@/components/common/PageHeader.astro";
import MuscleTestForm from "@/components/muscle-test-selection/MuscleTestForm";
import EmptyState from "@/components/ui/EmptyState.astro";
import { ErrorAlert } from "@/components/ui/ErrorAlert";
import Layout from "@/layouts/Layout.astro";
import { getMuscleTestsPageData } from "@/lib/services/muscle-test-page-data";

export const prerender = false;

// The global `onRequest` middleware should handle authentication and disclaimer checks.
// If execution reaches this point, we assume the user is authenticated
// and has an accepted disclaimer if required by the route.

// `getMuscleTestsPageData` will use Astro.locals (already populated by middleware)
// or Astro.params to fetch page-specific data.
const { muscleTests, fetchError, pageTitle, bodyPartId, backLink } = await getMuscleTestsPageData(Astro);

// Note: If `getMuscleTestsPageData` itself encounters an unrecoverable auth issue
// (e.g., session becomes invalid between middleware and this page load, which is rare),
// it should ideally handle that by returning an appropriate error state (e.g., in `fetchError`)
// rather than this page attempting another redirect that might conflict with middleware.
---

<Layout title={pageTitle}>
  <div class="container mx-auto py-8 px-2 sm:px-4">
    <PageHeader
      title={pageTitle}
      subtitle="Please rate the pain intensity for each test on a scale from 0 (no pain) to 10 (severe pain that prevents work)."
    />

    {
      fetchError ? (
        <ErrorAlert errors={fetchError} />
      ) : muscleTests && muscleTests.length > 0 ? (
        <MuscleTestForm client:load bodyPartId={bodyPartId} muscleTests={muscleTests} />
      ) : (
        <EmptyState message="No muscle tests available for this body part." {...backLink} />
      )
    }
  </div>
</Layout>
