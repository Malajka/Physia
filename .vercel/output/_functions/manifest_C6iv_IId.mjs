import "kleur/colors";
import { f as decodeKey } from "./chunks/astro/server_CfAXeihZ.mjs";
import "clsx";
import "cookie";
import "./chunks/astro-designed-error-pages_Cv7EM1T7.mjs";
import "es-module-lexer";
import { N as NOOP_MIDDLEWARE_FN } from "./chunks/noop-middleware_MfYCK3Rr.mjs";

function sanitizeParams(params) {
  return Object.fromEntries(
    Object.entries(params).map(([key, value]) => {
      if (typeof value === "string") {
        return [key, value.normalize().replace(/#/g, "%23").replace(/\?/g, "%3F")];
      }
      return [key, value];
    })
  );
}
function getParameter(part, params) {
  if (part.spread) {
    return params[part.content.slice(3)] || "";
  }
  if (part.dynamic) {
    if (!params[part.content]) {
      throw new TypeError(`Missing parameter: ${part.content}`);
    }
    return params[part.content];
  }
  return part.content.normalize().replace(/\?/g, "%3F").replace(/#/g, "%23").replace(/%5B/g, "[").replace(/%5D/g, "]");
}
function getSegment(segment, params) {
  const segmentPath = segment.map((part) => getParameter(part, params)).join("");
  return segmentPath ? "/" + segmentPath : "";
}
function getRouteGenerator(segments, addTrailingSlash) {
  return (params) => {
    const sanitizedParams = sanitizeParams(params);
    let trailing = "";
    if (addTrailingSlash === "always" && segments.length) {
      trailing = "/";
    }
    const path = segments.map((segment) => getSegment(segment, sanitizedParams)).join("") + trailing;
    return path || "/";
  };
}

function deserializeRouteData(rawRouteData) {
  return {
    route: rawRouteData.route,
    type: rawRouteData.type,
    pattern: new RegExp(rawRouteData.pattern),
    params: rawRouteData.params,
    component: rawRouteData.component,
    generate: getRouteGenerator(rawRouteData.segments, rawRouteData._meta.trailingSlash),
    pathname: rawRouteData.pathname || void 0,
    segments: rawRouteData.segments,
    prerender: rawRouteData.prerender,
    redirect: rawRouteData.redirect,
    redirectRoute: rawRouteData.redirectRoute ? deserializeRouteData(rawRouteData.redirectRoute) : void 0,
    fallbackRoutes: rawRouteData.fallbackRoutes.map((fallback) => {
      return deserializeRouteData(fallback);
    }),
    isIndex: rawRouteData.isIndex,
    origin: rawRouteData.origin,
  };
}

function deserializeManifest(serializedManifest) {
  const routes = [];
  for (const serializedRoute of serializedManifest.routes) {
    routes.push({
      ...serializedRoute,
      routeData: deserializeRouteData(serializedRoute.routeData),
    });
    const route = serializedRoute;
    route.routeData = deserializeRouteData(serializedRoute.routeData);
  }
  const assets = new Set(serializedManifest.assets);
  const componentMetadata = new Map(serializedManifest.componentMetadata);
  const inlinedScripts = new Map(serializedManifest.inlinedScripts);
  const clientDirectives = new Map(serializedManifest.clientDirectives);
  const serverIslandNameMap = new Map(serializedManifest.serverIslandNameMap);
  const key = decodeKey(serializedManifest.key);
  return {
    // in case user middleware exists, this no-op middleware will be reassigned (see plugin-ssr.ts)
    middleware() {
      return { onRequest: NOOP_MIDDLEWARE_FN };
    },
    ...serializedManifest,
    assets,
    componentMetadata,
    inlinedScripts,
    clientDirectives,
    routes,
    serverIslandNameMap,
    key,
  };
}

const manifest = deserializeManifest({
  hrefRoot: "file:///Users/monikabieniecka/Downloads/Physia/",
  cacheDir: "file:///Users/monikabieniecka/Downloads/Physia/node_modules/.astro/",
  outDir: "file:///Users/monikabieniecka/Downloads/Physia/dist/",
  srcDir: "file:///Users/monikabieniecka/Downloads/Physia/src/",
  publicDir: "file:///Users/monikabieniecka/Downloads/Physia/public/",
  buildClientDir: "file:///Users/monikabieniecka/Downloads/Physia/dist/client/",
  buildServerDir: "file:///Users/monikabieniecka/Downloads/Physia/dist/server/",
  adapterName: "@astrojs/vercel",
  routes: [
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        type: "page",
        component: "_server-islands.astro",
        params: ["name"],
        segments: [[{ content: "_server-islands", dynamic: false, spread: false }], [{ content: "name", dynamic: true, spread: false }]],
        pattern: "^\\/_server-islands\\/([^/]+?)\\/?$",
        prerender: false,
        isIndex: false,
        fallbackRoutes: [],
        route: "/_server-islands/[name]",
        origin: "internal",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        type: "endpoint",
        isIndex: false,
        route: "/_image",
        pattern: "^\\/_image\\/?$",
        segments: [[{ content: "_image", dynamic: false, spread: false }]],
        params: [],
        component: "node_modules/astro/dist/assets/endpoint/generic.js",
        pathname: "/_image",
        prerender: false,
        fallbackRoutes: [],
        origin: "internal",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/auth/login",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/auth\\/login\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "auth", dynamic: false, spread: false }],
          [{ content: "login", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/auth/login.ts",
        pathname: "/api/auth/login",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/auth/login.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/auth\\/login\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "auth", dynamic: false, spread: false }],
          [{ content: "login.test", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/auth/login.test.ts",
        pathname: "/api/auth/login.test",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/auth/logout",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/auth\\/logout\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "auth", dynamic: false, spread: false }],
          [{ content: "logout", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/auth/logout.ts",
        pathname: "/api/auth/logout",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/auth/logout.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/auth\\/logout\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "auth", dynamic: false, spread: false }],
          [{ content: "logout.test", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/auth/logout.test.ts",
        pathname: "/api/auth/logout.test",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/auth/register",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/auth\\/register\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "auth", dynamic: false, spread: false }],
          [{ content: "register", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/auth/register.ts",
        pathname: "/api/auth/register",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/auth/register.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/auth\\/register\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "auth", dynamic: false, spread: false }],
          [{ content: "register.test", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/auth/register.test.ts",
        pathname: "/api/auth/register.test",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/body_parts/index.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/body_parts\\/index\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "body_parts", dynamic: false, spread: false }],
          [{ content: "index.test", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/body_parts/index.test.ts",
        pathname: "/api/body_parts/index.test",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/body_parts/[body_part_id]/muscle_tests",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/body_parts\\/([^/]+?)\\/muscle_tests\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "body_parts", dynamic: false, spread: false }],
          [{ content: "body_part_id", dynamic: true, spread: false }],
          [{ content: "muscle_tests", dynamic: false, spread: false }],
        ],
        params: ["body_part_id"],
        component: "src/pages/api/body_parts/[body_part_id]/muscle_tests.ts",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/body_parts/[body_part_id]/muscle_tests.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/body_parts\\/([^/]+?)\\/muscle_tests\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "body_parts", dynamic: false, spread: false }],
          [{ content: "body_part_id", dynamic: true, spread: false }],
          [{ content: "muscle_tests.test", dynamic: false, spread: false }],
        ],
        params: ["body_part_id"],
        component: "src/pages/api/body_parts/[body_part_id]/muscle_tests.test.ts",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/body_parts",
        isIndex: true,
        type: "endpoint",
        pattern: "^\\/api\\/body_parts\\/?$",
        segments: [[{ content: "api", dynamic: false, spread: false }], [{ content: "body_parts", dynamic: false, spread: false }]],
        params: [],
        component: "src/pages/api/body_parts/index.ts",
        pathname: "/api/body_parts",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/disclaimers/index.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/disclaimers\\/index\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "disclaimers", dynamic: false, spread: false }],
          [{ content: "index.test", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/disclaimers/index.test.ts",
        pathname: "/api/disclaimers/index.test",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/disclaimers",
        isIndex: true,
        type: "endpoint",
        pattern: "^\\/api\\/disclaimers\\/?$",
        segments: [[{ content: "api", dynamic: false, spread: false }], [{ content: "disclaimers", dynamic: false, spread: false }]],
        params: [],
        component: "src/pages/api/disclaimers/index.ts",
        pathname: "/api/disclaimers",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/sessions/index.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/sessions\\/index\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "sessions", dynamic: false, spread: false }],
          [{ content: "index.test", dynamic: false, spread: false }],
        ],
        params: [],
        component: "src/pages/api/sessions/index.test.ts",
        pathname: "/api/sessions/index.test",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/sessions/[session_id]/exercises",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/sessions\\/([^/]+?)\\/exercises\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "sessions", dynamic: false, spread: false }],
          [{ content: "session_id", dynamic: true, spread: false }],
          [{ content: "exercises", dynamic: false, spread: false }],
        ],
        params: ["session_id"],
        component: "src/pages/api/sessions/[session_id]/exercises.ts",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/sessions/[session_id]/exercises.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/sessions\\/([^/]+?)\\/exercises\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "sessions", dynamic: false, spread: false }],
          [{ content: "session_id", dynamic: true, spread: false }],
          [{ content: "exercises.test", dynamic: false, spread: false }],
        ],
        params: ["session_id"],
        component: "src/pages/api/sessions/[session_id]/exercises.test.ts",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/sessions/[session_id]/feedback",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/sessions\\/([^/]+?)\\/feedback\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "sessions", dynamic: false, spread: false }],
          [{ content: "session_id", dynamic: true, spread: false }],
          [{ content: "feedback", dynamic: false, spread: false }],
        ],
        params: ["session_id"],
        component: "src/pages/api/sessions/[session_id]/feedback.ts",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/sessions/[session_id]/feedback.test",
        isIndex: false,
        type: "endpoint",
        pattern: "^\\/api\\/sessions\\/([^/]+?)\\/feedback\\.test\\/?$",
        segments: [
          [{ content: "api", dynamic: false, spread: false }],
          [{ content: "sessions", dynamic: false, spread: false }],
          [{ content: "session_id", dynamic: true, spread: false }],
          [{ content: "feedback.test", dynamic: false, spread: false }],
        ],
        params: ["session_id"],
        component: "src/pages/api/sessions/[session_id]/feedback.test.ts",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [],
      routeData: {
        route: "/api/sessions",
        isIndex: true,
        type: "endpoint",
        pattern: "^\\/api\\/sessions\\/?$",
        segments: [[{ content: "api", dynamic: false, spread: false }], [{ content: "sessions", dynamic: false, spread: false }]],
        params: [],
        component: "src/pages/api/sessions/index.ts",
        pathname: "/api/sessions",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [{ type: "external", src: "/_astro/body-parts.dXJLcqfD.css" }],
      routeData: {
        route: "/body-parts",
        isIndex: false,
        type: "page",
        pattern: "^\\/body-parts\\/?$",
        segments: [[{ content: "body-parts", dynamic: false, spread: false }]],
        params: [],
        component: "src/pages/body-parts.astro",
        pathname: "/body-parts",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [{ type: "external", src: "/_astro/body-parts.dXJLcqfD.css" }],
      routeData: {
        route: "/login",
        isIndex: false,
        type: "page",
        pattern: "^\\/login\\/?$",
        segments: [[{ content: "login", dynamic: false, spread: false }]],
        params: [],
        component: "src/pages/login.astro",
        pathname: "/login",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [{ type: "external", src: "/_astro/body-parts.dXJLcqfD.css" }],
      routeData: {
        route: "/muscle-tests/[body_part_id]",
        isIndex: false,
        type: "page",
        pattern: "^\\/muscle-tests\\/([^/]+?)\\/?$",
        segments: [[{ content: "muscle-tests", dynamic: false, spread: false }], [{ content: "body_part_id", dynamic: true, spread: false }]],
        params: ["body_part_id"],
        component: "src/pages/muscle-tests/[body_part_id].astro",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [{ type: "external", src: "/_astro/body-parts.dXJLcqfD.css" }],
      routeData: {
        route: "/register",
        isIndex: false,
        type: "page",
        pattern: "^\\/register\\/?$",
        segments: [[{ content: "register", dynamic: false, spread: false }]],
        params: [],
        component: "src/pages/register.astro",
        pathname: "/register",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [{ type: "external", src: "/_astro/body-parts.dXJLcqfD.css" }],
      routeData: {
        route: "/session/generate",
        isIndex: false,
        type: "page",
        pattern: "^\\/session\\/generate\\/?$",
        segments: [[{ content: "session", dynamic: false, spread: false }], [{ content: "generate", dynamic: false, spread: false }]],
        params: [],
        component: "src/pages/session/generate.astro",
        pathname: "/session/generate",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [{ type: "external", src: "/_astro/body-parts.dXJLcqfD.css" }],
      routeData: {
        route: "/sessions/[session_id]",
        isIndex: false,
        type: "page",
        pattern: "^\\/sessions\\/([^/]+?)\\/?$",
        segments: [[{ content: "sessions", dynamic: false, spread: false }], [{ content: "session_id", dynamic: true, spread: false }]],
        params: ["session_id"],
        component: "src/pages/sessions/[session_id].astro",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [{ type: "external", src: "/_astro/body-parts.dXJLcqfD.css" }],
      routeData: {
        route: "/sessions",
        isIndex: true,
        type: "page",
        pattern: "^\\/sessions\\/?$",
        segments: [[{ content: "sessions", dynamic: false, spread: false }]],
        params: [],
        component: "src/pages/sessions/index.astro",
        pathname: "/sessions",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
    {
      file: "",
      links: [],
      scripts: [],
      styles: [{ type: "external", src: "/_astro/body-parts.dXJLcqfD.css" }],
      routeData: {
        route: "/",
        isIndex: true,
        type: "page",
        pattern: "^\\/$",
        segments: [],
        params: [],
        component: "src/pages/index.astro",
        pathname: "/",
        prerender: false,
        fallbackRoutes: [],
        distURL: [],
        origin: "project",
        _meta: { trailingSlash: "ignore" },
      },
    },
  ],
  base: "/",
  trailingSlash: "ignore",
  compressHTML: true,
  componentMetadata: [
    ["/Users/monikabieniecka/Downloads/Physia/src/pages/body-parts.astro", { propagation: "none", containsHead: true }],
    ["/Users/monikabieniecka/Downloads/Physia/src/pages/index.astro", { propagation: "none", containsHead: true }],
    ["/Users/monikabieniecka/Downloads/Physia/src/pages/login.astro", { propagation: "none", containsHead: true }],
    ["/Users/monikabieniecka/Downloads/Physia/src/pages/muscle-tests/[body_part_id].astro", { propagation: "none", containsHead: true }],
    ["/Users/monikabieniecka/Downloads/Physia/src/pages/register.astro", { propagation: "none", containsHead: true }],
    ["/Users/monikabieniecka/Downloads/Physia/src/pages/session/generate.astro", { propagation: "none", containsHead: true }],
    ["/Users/monikabieniecka/Downloads/Physia/src/pages/sessions/[session_id].astro", { propagation: "none", containsHead: true }],
    ["/Users/monikabieniecka/Downloads/Physia/src/pages/sessions/index.astro", { propagation: "none", containsHead: true }],
  ],
  renderers: [],
  clientDirectives: [
    [
      "idle",
      '(()=>{var l=(n,t)=>{let i=async()=>{await(await n())()},e=typeof t.value=="object"?t.value:void 0,s={timeout:e==null?void 0:e.timeout};"requestIdleCallback"in window?window.requestIdleCallback(i,s):setTimeout(i,s.timeout||200)};(self.Astro||(self.Astro={})).idle=l;window.dispatchEvent(new Event("astro:idle"));})();',
    ],
    ["load", '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).load=e;window.dispatchEvent(new Event("astro:load"));})();'],
    [
      "media",
      '(()=>{var n=(a,t)=>{let i=async()=>{await(await a())()};if(t.value){let e=matchMedia(t.value);e.matches?i():e.addEventListener("change",i,{once:!0})}};(self.Astro||(self.Astro={})).media=n;window.dispatchEvent(new Event("astro:media"));})();',
    ],
    ["only", '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).only=e;window.dispatchEvent(new Event("astro:only"));})();'],
    [
      "visible",
      '(()=>{var a=(s,i,o)=>{let r=async()=>{await(await s())()},t=typeof i.value=="object"?i.value:void 0,c={rootMargin:t==null?void 0:t.rootMargin},n=new IntersectionObserver(e=>{for(let l of e)if(l.isIntersecting){n.disconnect(),r();break}},c);for(let e of o.children)n.observe(e)};(self.Astro||(self.Astro={})).visible=a;window.dispatchEvent(new Event("astro:visible"));})();',
    ],
  ],
  entryModules: {
    "\u0000@astrojs-ssr-adapter": "_@astrojs-ssr-adapter.mjs",
    "\u0000noop-actions": "_noop-actions.mjs",
    "\u0000@astro-page:src/pages/api/auth/login@_@ts": "pages/api/auth/login.astro.mjs",
    "\u0000@astro-page:src/pages/api/auth/logout@_@ts": "pages/api/auth/logout.astro.mjs",
    "\u0000@astro-page:src/pages/api/auth/register@_@ts": "pages/api/auth/register.astro.mjs",
    "\u0000@astro-page:src/pages/api/body_parts/[body_part_id]/muscle_tests@_@ts": "pages/api/body_parts/_body_part_id_/muscle_tests.astro.mjs",
    "\u0000@astro-page:src/pages/api/body_parts/index@_@ts": "pages/api/body_parts.astro.mjs",
    "\u0000@astro-page:src/pages/api/disclaimers/index@_@ts": "pages/api/disclaimers.astro.mjs",
    "\u0000@astro-page:src/pages/api/sessions/[session_id]/exercises@_@ts": "pages/api/sessions/_session_id_/exercises.astro.mjs",
    "\u0000@astro-page:src/pages/api/sessions/[session_id]/feedback@_@ts": "pages/api/sessions/_session_id_/feedback.astro.mjs",
    "\u0000@astro-page:src/pages/api/sessions/index@_@ts": "pages/api/sessions.astro.mjs",
    "\u0000@astro-page:src/pages/api/auth/login.test@_@ts": "pages/api/auth/login.test.astro.mjs",
    "\u0000@astro-page:src/pages/api/auth/logout.test@_@ts": "pages/api/auth/logout.test.astro.mjs",
    "\u0000@astro-page:src/pages/api/auth/register.test@_@ts": "pages/api/auth/register.test.astro.mjs",
    "\u0000@astro-page:src/pages/api/body_parts/index.test@_@ts": "pages/api/body_parts/index.test.astro.mjs",
    "\u0000@astro-page:src/pages/api/body_parts/[body_part_id]/muscle_tests.test@_@ts":
      "pages/api/body_parts/_body_part_id_/muscle_tests.test.astro.mjs",
    "\u0000@astro-page:src/pages/api/disclaimers/index.test@_@ts": "pages/api/disclaimers/index.test.astro.mjs",
    "\u0000@astro-page:src/pages/api/sessions/index.test@_@ts": "pages/api/sessions/index.test.astro.mjs",
    "\u0000@astro-page:src/pages/api/sessions/[session_id]/exercises.test@_@ts": "pages/api/sessions/_session_id_/exercises.test.astro.mjs",
    "\u0000@astro-page:src/pages/api/sessions/[session_id]/feedback.test@_@ts": "pages/api/sessions/_session_id_/feedback.test.astro.mjs",
    "\u0000@astro-page:src/pages/sessions/index@_@astro": "pages/sessions.astro.mjs",
    "\u0000@astro-page:src/pages/index@_@astro": "pages/index.astro.mjs",
    "\u0000@astrojs-ssr-virtual-entry": "entry.mjs",
    "\u0000astro-internal:middleware": "_astro-internal_middleware.mjs",
    "\u0000@astro-page:src/pages/login@_@astro": "pages/login.astro.mjs",
    "\u0000@astro-renderers": "renderers.mjs",
    "\u0000@astro-page:src/pages/register@_@astro": "pages/register.astro.mjs",
    "\u0000@astro-page:src/pages/sessions/[session_id]@_@astro": "pages/sessions/_session_id_.astro.mjs",
    "\u0000@astro-page:src/pages/session/generate@_@astro": "pages/session/generate.astro.mjs",
    "\u0000@astro-page:src/pages/muscle-tests/[body_part_id]@_@astro": "pages/muscle-tests/_body_part_id_.astro.mjs",
    "\u0000@astro-page:src/pages/body-parts@_@astro": "pages/body-parts.astro.mjs",
    "\u0000@astro-page:node_modules/astro/dist/assets/endpoint/generic@_@js": "pages/_image.astro.mjs",
    "/Users/monikabieniecka/Downloads/Physia/node_modules/astro/dist/assets/services/sharp.js": "chunks/sharp_DbMwpBFM.mjs",
    "\u0000@astrojs-manifest": "manifest_C6iv_IId.mjs",
    "@/components/session/TrainingPlanDisplay": "_astro/TrainingPlanDisplay.DNqhOVpK.js",
    "@/components/auth/LoginForm": "_astro/LoginForm.Ds3iJ0f2.js",
    "@/components/session/FeedbackRating": "_astro/FeedbackRating.C6zdUP8q.js",
    "@/components/auth/RegisterForm": "_astro/RegisterForm.SD4ZkvMR.js",
    "@/components/auth/LogoutButton": "_astro/LogoutButton.joKTz3oq.js",
    "@/components/session/SessionGenerationLoading": "_astro/SessionGenerationLoading.B28ygSDS.js",
    "@astrojs/react/client.js": "_astro/client.DOhwul6r.js",
    "@/components/muscle-test-selection/MuscleTestForm": "_astro/MuscleTestForm.DguQ9Vwr.js",
    "@/components/body-part-selection/BodyPartSelector": "_astro/BodyPartSelector.B6rmNqux.js",
    "@/components/ui/LinkButton": "_astro/LinkButton.DkvoeGXY.js",
    "astro:scripts/before-hydration.js": "",
  },
  inlinedScripts: [],
  assets: [
    "/_astro/body-parts.dXJLcqfD.css",
    "/favicn.ico",
    "/favicon.ico",
    "/physia-logo.png",
    "/physia.png",
    "/_astro/BodyPartSelector.B6rmNqux.js",
    "/_astro/FeedbackRating.C6zdUP8q.js",
    "/_astro/LinkButton.DkvoeGXY.js",
    "/_astro/LoginForm.Ds3iJ0f2.js",
    "/_astro/LogoutButton.joKTz3oq.js",
    "/_astro/MuscleTestForm.DguQ9Vwr.js",
    "/_astro/PasswordField.CF_by7gb.js",
    "/_astro/RegisterForm.SD4ZkvMR.js",
    "/_astro/SessionGenerationLoading.B28ygSDS.js",
    "/_astro/Spinner.DSa3dCc_.js",
    "/_astro/SubmitButton.DlqxO_LI.js",
    "/_astro/TrainingPlanDisplay.DNqhOVpK.js",
    "/_astro/api.C6upV_NU.js",
    "/_astro/auth.validator.Db2b3f6L.js",
    "/_astro/client.DOhwul6r.js",
    "/_astro/index.De2ii6Pa.js",
    "/_astro/index.KqMXKjf4.js",
    "/_astro/index.yBjzXJbu.js",
    "/_astro/jsx-runtime.D3GSbgeI.js",
    "/_astro/types.B_THrErz.js",
    "/images/phybsia.png",
    "/images/body-parts/arms-and-wrists.png",
    "/images/body-parts/hips-and-knees.png",
    "/images/body-parts/lower-back.png",
    "/images/body-parts/neck.png",
    "/images/body-parts/upper-back.png",
  ],
  buildFormat: "directory",
  checkOrigin: true,
  serverIslandNameMap: [],
  key: "pBl060k6JQs9udnKDbT+J0pdVAPeYkmJFb20NmMDmvM=",
});
if (manifest.sessionConfig) manifest.sessionConfig.driverModule = null;

export { manifest };
